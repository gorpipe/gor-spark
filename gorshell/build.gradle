plugins {
    id 'gor.java-library'
    id 'gor.java-application'
    id 'gor.scala-common'
}

project(':gorshell') {
    configurations.all {
        if (name.startsWith("incrementalScalaAnalysis")) {
            extendsFrom = []
        }
    }

    sourceSets.main.scala.srcDirs 'src/main/java'
    sourceSets.main.java.srcDirs = []

    dependencies {
        implementation project(":spark")

        implementation("${gorArtifactGroupId}:gor-base:${gorVersion}") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
            exclude group: 'ch.qos.logback', module: 'logback-core'
        }
        implementation("${gorArtifactGroupId}:gor-model:${gorVersion}") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
        }
        implementation("${gorArtifactGroupId}:gor-gortools:${gorVersion}") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
            exclude group: 'org.scalanlp', module: "breeze_${scalaVersion}"
        }
        implementation("${gorArtifactGroupId}:gor-gorscripts:${gorVersion}") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
            exclude group: 'org.scalanlp', module: "breeze_${scalaVersion}"
        }
        implementation("${gorArtifactGroupId}:gor-util:${gorVersion}") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
        }

        implementation ("org.apache.spark:spark-core_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-sql_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-mllib_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-tags_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-kubernetes_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.spark', module: "spark-tags_${scalaVersion}"
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-catalyst_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-repl_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }
        implementation ("org.apache.spark:spark-hive_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
            exclude group: 'org.antlr', module: 'antlr-runtime'
        }
        implementation ("org.apache.spark:spark-hive-thriftserver_${scalaVersion}:_") {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
            exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-server-nodemanager'
        }

        implementation("org.scalanlp:breeze_${scalaVersion}") {
            version {
                strictly "1.3"
            }
        }
        implementation("org.antlr:antlr4") {
            version {
                strictly "4.10.1"
            }
        }
        implementation("org.antlr:antlr4-runtime") {
            version {
                strictly "4.10.1"
            }
        }

        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.0'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'
        implementation group: 'com.fasterxml.jackson.module', name: "jackson-module-scala_${scalaVersion}", version: '2.11.0'

        implementation "org.apache.logging.log4j:log4j:_"
        implementation "org.apache.logging.log4j:log4j-core:_"
        implementation "org.apache.logging.log4j:log4j-api:_"
        implementation "org.apache.logging.log4j:log4j-slf4j-impl:_"
        implementation "org.apache.logging.log4j:log4j-1.2-api:_"

        implementation ('org.apache.hadoop:hadoop-common:_') {
            exclude group: 'com.google.guava', module: 'guava'
        }
        implementation ('org.apache.hadoop:hadoop-client:_') {

        }
        implementation ('org.apache.hadoop:hadoop-client-api:_') {

        }
        implementation ('org.apache.hadoop:hadoop-client-runtime:_') {

        }
        implementation ('org.apache.hadoop:hadoop-hdfs:_') {
            exclude group: 'com.google.guava', module: 'guava'
        }
        implementation ('org.apache.hadoop:hadoop-hdfs-client:_') {

        }
        implementation ('org.apache.hadoop:hadoop-aws:_') {

        }
        implementation 'org.apache.commons:commons-compress:_'

        implementation("io.projectglow:glow-spark3_${scalaVersion}:_") {
            exclude group: 'org.freemarker'
        }

        implementation "org.aeonbits.owner:owner:_"
        implementation 'info.picocli:picocli-shell-jline3:_'

        implementation 'io.kubernetes:client-java:_'

        testImplementation("${gorArtifactGroupId}:gor-test:${gorVersion}") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
        }
    }

    jar {
        manifest.attributes 'Main-Class': "gorsat.process.SparkPipe"
    }

    def scripts = [
            'gorpipe'   : ['className'     : 'org.gorpipe.spark.SparkPipe',
                           'defaultJvmOpts': ['-Djava.security.egd=file:/dev/./urandom',
                                              '-Dgor.querylimits.writequota.mb=0',
                                              '-Dgor.querylimits.timeout.seconds=0',
                                              '-Dlog4j.configurationFile=__APP_HOME__/config/log4j-console.xml']],

            'gorshell'   : ['className'     : 'org.gorpipe.gorshell.GorSparkShell',
                            'defaultJvmOpts': ['-Djava.security.egd=file:/dev/./urandom',
                                               '-Dgor.querylimits.writequota.mb=0',
                                               '-Dgor.querylimits.timeout.seconds=0',
                                               '-Dlog4j.configurationFile=__APP_HOME__/config/log4j.xml']],

            'gor'       : ['className'     : 'org.gorpipe.gor.cli.GorCLI',
                           'defaultJvmOpts': ['-Djava.security.egd=file:/dev/./urandom',
                                              '-Dgor.querylimits.writequota.mb=0',
                                              '-Dgor.querylimits.timeout.seconds=0',
                                              '-Dlog4j.configurationFile=__APP_HOME__/config/log4j-console.xml']],

            'jessica'   : ['override'      : 'startScripts',
                           'className'     : 'org.gorpipe.jessica.Jessica',
                           'defaultJvmOpts': []],

            'gormanager': ['className'     : 'org.gorpipe.gor.manager.TableManagerCLI',
                           'defaultJvmOpts': ['-Djava.security.egd=file:/dev/./urandom',
                                              '-Dgor.querylimits.writequota.mb=0',
                                              '-Dgor.querylimits.timeout.seconds=0',
                                              '-Dlog4j.configurationFile=__APP_HOME__/config/log4j.xml']],

            'gortool'   : ['className'     : 'org.gorpipe.gor.tools.GorToolsCLI',
                           'defaultJvmOpts': ['-Dlog4j.configurationFile=__APP_HOME__/config/log4j.xml']]
    ]

    scripts.each() { scriptName, params ->
        def t = params.containsKey('override') ? tasks.getByName(params.override) : tasks.create(name: scriptName + 'StartScript', type: CreateStartScripts)
        updateScriptTask("GOR", scriptName, params, t, project)
    }

    tasks.distZip.enabled = true
    tasks.distZip.archiveClassifier = "dist"
}
