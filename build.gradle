/*
 *  BEGIN_COPYRIGHT
 *
 *  Copyright (C) 2011-2013 deCODE genetics Inc.
 *  Copyright (C) 2013-2019 WuXi NextCode Inc.
 *  All Rights Reserved.
 *
 *  GORpipe is free software: you can redistribute it and/or modify
 *  it under the terms of the AFFERO GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  GORpipe is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
 *  INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 *  NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
 *  the AFFERO GNU General Public License for the complete license terms.
 *
 *  You should have received a copy of the AFFERO GNU General Public License
 *  along with GORpipe.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
 *
 *  END_COPYRIGHT
 */
// Configure the build script repositories and dependencies, must be defined in the top level gradle file.
buildscript {
    repositories {
        if (project.hasProperty('useMavenLocal')) {
            mavenLocal()
        }
        //jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.gitlab.stfs.gradle.dependencygraph:gradle-dependency-graph-plugin:_"

        // For GitLab licences scanning
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:_"
    }
}

plugins {
    id 'idea'
    id "org.ajoberstar.grgit"
    id "kr.motd.sphinx" apply false

    // Plugins not applied everywhere.
    id "com.github.hierynomus.license" apply false

    // The following plugins are support plugins that don't effect the build directly.
    id 'nebula.lint'
    id "com.autonomousapps.dependency-analysis"
    id "com.adarshr.test-logger" apply false
    id "org.owasp.dependencycheck"  apply false
}

apply plugin: "com.gitlab.stfs.gradle.dependency-graph-plugin"

ext {
    // Get the git SHA to use in manifests. Do this on top level to avoid executing many times in subprojects.
    gitSHA = grgit.head().id
}

gradleLint {
    rules = ['all-dependency', 'duplicate-dependency-class']
    //criticalRules = ['unused-dependency']
    alwaysRun = false
}
