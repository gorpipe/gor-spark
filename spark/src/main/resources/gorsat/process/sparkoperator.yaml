apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name: gorquery
  namespace: gorkube
spec:
  type: Java
  mode: cluster
  image: nextcode/spark:1.2.0
  imagePullPolicy: Always
  imagePullSecrets:
    - dockerhub-nextcode-download-credentials
  mainApplicationFile: local:///opt/spark/jars/gor-spark-3.0.1.jar
  mainClass: org.gorpipe.spark.redis.RedisBatchConsumer
  sparkVersion: 3.0.1
  restartPolicy:
    type: OnFailure
    onFailureRetries: 1
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 1
    onSubmissionFailureRetryInterval: 20
  sparkConf:
    spark.kubernetes.driver.volumes.persistentVolumeClaim.volume.mount.path: /mnt/csa/volume
    spark.kubernetes.driver.volumes.persistentVolumeClaim.volume.mount.readOnly: true
    spark.kubernetes.driver.volumes.persistentVolumeClaim.volume.options.claimName: pvc-phenocat-v2
    spark.kubernetes.executor.volumes.persistentVolumeClaim.volume.mount.path: /mnt/csa/volume
    spark.kubernetes.executor.volumes.persistentVolumeClaim.volume.mount.readOnly: true
    spark.kubernetes.executor.volumes.persistentVolumeClaim.volume.options.claimName: pvc-phenocat-v2
    spark.kubernetes.driver.volumes.persistentVolumeClaim.data.mount.path: /mnt/csa/data
    spark.kubernetes.driver.volumes.persistentVolumeClaim.data.mount.readOnly: true
    spark.kubernetes.driver.volumes.persistentVolumeClaim.data.options.claimName: pvc-sm-v2
    spark.kubernetes.executor.volumes.persistentVolumeClaim.data.mount.path: /mnt/csa/data
    spark.kubernetes.executor.volumes.persistentVolumeClaim.data.mount.readOnly: true
    spark.kubernetes.executor.volumes.persistentVolumeClaim.data.options.claimName: pvc-sm-v2
  driver:
    cores: 1
    coreLimit: 1200m
    memory: 1500m
    labels:
      version: v3.0.1
    securityContext:
      runAsUser: 3000
      fsGroup: 3000
  executor:
    cores: 1
    instances: 1
    memory: 900m
    labels:
      version: v3.0.1
    securityContext:
      runAsUser: 3000
      fsGroup: 3000