<!--
  ~ * BEGIN_COPYRIGHT
  ~ *
  ~ * Copyright (C) 2011-2013 deCODE genetics Inc.
  ~ * Copyright (C) 2013-2019 WuXi NextCode Inc.
  ~ * All Rights Reserved.
  ~ *
  ~ * GORpipe is free software: you can redistribute it and/or modify
  ~ * it under the terms of the AFFERO GNU General Public License as published by
  ~ * the Free Software Foundation.
  ~ *
  ~ * GORpipe is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
  ~ * INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
  ~ * NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
  ~ * the AFFERO GNU General Public License for the complete license terms.
  ~ *
  ~ * You should have received a copy of the AFFERO GNU General Public License
  ~ * along with GORpipe.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
  ~ *
  ~ * END_COPYRIGHT
  -->

<configuration>
    <!--
    This is a minimal default configuration that is bundled with any GOR build.

    When running GorServer, GorWorker or any other process that should log to a file, a more robust configuration
    should be used. See logback-gorservices.xml

    To use a different configuration file, specify the following JVM config option (pointing to the correct path):
    java -Dlogback.configurationFile=path_to/custom-logback-config.xml
    -->

    <!--
    Add a context listener that will change the log level of JUL according to the SLF4J log level. This will ensure
    that JUL will not be performing needless work for logging statements that are eventually disabled in SLF4J.
    -->
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

    <appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
        <target>System.err</target>
        <encoder class="org.gorpipe.base.logging.ExtendedPatternLayoutEncoder">
            <pattern>%d{HH:mm:ss.SSS} [%hostname] [%process_id] [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="audit" level="debug" additivity="false">
        <appender-ref ref="STDERR"/>
    </logger>

    <root level="warn">
        <appender-ref ref="STDERR"/>
    </root>
</configuration>
