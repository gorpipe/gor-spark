/*
 *  BEGIN_COPYRIGHT
 *
 *  Copyright (C) 2011-2013 deCODE genetics Inc.
 *  Copyright (C) 2013-2019 WuXi NextCode Inc.
 *  All Rights Reserved.
 *
 *  GORpipe is free software: you can redistribute it and/or modify
 *  it under the terms of the AFFERO GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  GORpipe is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
 *  INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 *  NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
 *  the AFFERO GNU General Public License for the complete license terms.
 *
 *  You should have received a copy of the AFFERO GNU General Public License
 *  along with GORpipe.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
 *
 *  END_COPYRIGHT
 */

plugins {
    id "gor.common"
    id "scala"
}

// See: https://github.com/gradle/gradle/issues/6854
configurations.all {
    if (name.startsWith("incrementalScalaAnalysis")) {
        extendsFrom = []
    }
}

compileScala {options.encoding = "UTF-8"}
compileTestScala {options.encoding = "UTF-8"}

// To build mixed java scala projects, the scala plugin can handle both java and scala code so
// we add the java source dir to scala plugin and remove all src dirs from the java plugin.
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []

tasks.withType(ScalaCompile) {
    scalaCompileOptions.metaClass.useAnt = false
    scalaCompileOptions.additionalParameters = ["-Xno-patmat-analysis"]
}