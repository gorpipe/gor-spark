import org.gorpipe.gradle.GenerateSparkGorToolsHelpTask

/*
 *  BEGIN_COPYRIGHT
 *
 *  Copyright (C) 2011-2013 deCODE genetics Inc.
 *  Copyright (C) 2013-2019 WuXi NextCode Inc.
 *  All Rights Reserved.
 *
 *  GORpipe is free software: you can redistribute it and/or modify
 *  it under the terms of the AFFERO GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  GORpipe is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
 *  INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 *  NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
 *  the AFFERO GNU General Public License for the complete license terms.
 *
 *  You should have received a copy of the AFFERO GNU General Public License
 *  along with GORpipe.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
 *
 *  END_COPYRIGHT
 */
plugins {
    id 'gor.java-library'
    id "kr.motd.sphinx"
}

project(':documentation') {

    task generateText (type: kr.motd.gradle.sphinx.gradle.SphinxTask){
        onlyIf { ! Boolean.getBoolean('skip.documentation') }
        builder = "text"
        sourceDirectory = "${project.projectDir}/src"
        outputDirectory = "${project.buildDir}/text"
        tags = ["gor_text_help"]
    }

    task generateHtml (type: kr.motd.gradle.sphinx.gradle.SphinxTask){
        onlyIf { ! Boolean.getBoolean('skip.documentation') }
        builder = "html"
        sourceDirectory = "${project.projectDir}/src"
        outputDirectory = "${project.buildDir}/html"
    }

    task generateGorCommandsToolsHelp( type: GenerateSparkGorToolsHelpTask ){
        dependsOn generateText
        onlyIf { ! Boolean.getBoolean('skip.documentation') }

        header = "COMMANDS"
        helpText = "Try HELP COMMANDS, HELP FUNCTIONS or HELP followed by some of these commands:"
        inputDir = new File(generateText.outputDirectory, "command")
        // NOTE: the output file must be named gor_help.txt, that name is hard coded into the GorHelp class.
        outputFile = new File(generateText.outputDirectory, "gor_commands_help.txt")
    }

    jar {
        dependsOn generateGorCommandsToolsHelp, generateHtml
        onlyIf { ! Boolean.getBoolean('skip.documentation') }

        from "${generateGorCommandsToolsHelp.outputFile}"
        into("/documentation") {
            from fileTree("${generateHtml.outputDirectory}") {
                include '**/*'
            }
        }
    }
}

